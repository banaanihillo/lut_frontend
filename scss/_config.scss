$primary-color: black;
$secondary-color: deeppink;
$background-opacity: 0.6;

@mixin background {
    /*
    &:after {
        content: "";
    }

    Looks even more gimmicky.
    The overlay id seems a lot more descriptive,
    may be a personal preference thing though
    */
    
    &#overlay {
        position: absolute;
        top: 0;
        right: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
        background: rgba($primary-color, $background-opacity)
        /*
        Sets the background to the primary color,
        adjusted by the given opacity parameter.
        The higher the opacity,
        the more the overlay affects the original background color;
        here, an opacity higher than, say, 0.5 makes the text basically unreadable
        
        background: rgba($primary-color, $background-opacity);
        
        Include this thing to "negate" that effect,
        pushing the overlay behind the actual background,
        essentially making the background color the primary color again:
        z-index: -1;

        Kind of a nice-to-know gimmick,
        unnecessary for now though
        */
    }
}

@mixin smallScreen {
    @media screen and (max-width: 520px) {
        @content;
    }
}
//makes this stuff apply to both small and medium screens
@mixin mediumScreen {
    @media screen and (max-width: 940px) {
        @content;
    }
}
//and if there's stuff that needs to be handled separately for large and huge screens,
@mixin largeScreen {
    @media screen
        and (min-width: 941px)
        and (max-width: 1600px) {
            @content;
        }
}
//this will separate these two cases,
//each having their own unique properties
@mixin hugeScreen {
    @media screen and (min-width: 1601px) {
        @content;
    }
}
